apply plugin: 'com.android.application'
apply plugin: 'io.objectbox'
apply plugin: 'com.github.triplet.play'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId 'closer.vlllage.com.closer'
        minSdkVersion 21
        targetSdkVersion 28
        versionCode readVersionCode()
        versionName '1.0'
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }
    signingConfigs {
        release {
            storeFile file("../../../android.jks")
            storePassword "closertome"
            keyAlias "closer"
            keyPassword "closertome"
            v1SigningEnabled true
            v2SigningEnabled true
        }
        debug {
            storeFile file("../../../android.jks")
            storePassword "closertome"
            keyAlias "closer"
            keyPassword "closertome"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

play {
    serviceAccountCredentials = file('../../../service-account-key.json')
    track = 'internal'
}

dependencies {
    implementation ('com.android.support.constraint:constraint-layout:2.0.0-alpha2') {
        exclude group: 'com.android.support'
    }
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation ('com.google.android.gms:play-services-maps:15.0.1') {
        exclude group: 'com.android.support'
    }
    implementation ('com.google.android.gms:play-services-location:15.0.1') {
        exclude group: 'com.android.support'
    }
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.6'
    implementation 'com.google.firebase:firebase-core:16.0.7'
    implementation 'com.google.firebase:firebase-messaging:17.3.4'
    implementation ('com.github.chrisbanes:PhotoView:2.1.3') {
        exclude group: 'com.android.support'
    }
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.9.2'
    implementation ('com.squareup.picasso:picasso:2.71828') {
        exclude group: 'com.android.support'
    }
    implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'
    implementation 'com.vdurmont:emoji-java:4.0.0'
    implementation 'com.luckycatlabs:SunriseSunsetCalculator:1.2'
    implementation 'jp.wasabeef:picasso-transformations:2.2.1'
    implementation 'com.github.Queatz:Android-UX-Extras-Slide-Screen:0.1.2'
    implementation group: 'com.github.haifengl', name: 'smile-core', version: '1.5.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

def readVersionCode() {
    def versionPropsFile = file('../version.properties')
    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        return versionProps['versionCode'].toInteger()
    }

    throw new GradleException("Could not read version.properties!")
}

def incrementVersionCode() {
    def versionPropsFile = file('../version.properties')
    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        def code = versionProps['versionCode'].toInteger() + 1
        versionProps['versionCode'] = code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)
        return code
    }

    throw new GradleException("Could not read version.properties!")
}

task prepareVersionCode doLast {
    print 'Version code updated to ' + incrementVersionCode()
}

tasks.whenTaskAdded { task ->
    if (task.name == 'publishReleaseBundle') {
        task.dependsOn prepareVersionCode
    }
}

apply plugin: com.google.gms.googleservices.GoogleServicesPlugin